---
AWSTemplateFormatVersion: "2010-09-09"
Description: "SSM document to restart Avalanche node process to whitelist subnet"

Parameters:
  DocumentName:
    Type: String
    Default: WhitelistSubnetWhitelistSubnetV0
    Description: SSM document Name.

Resources:
  RestartAvalancheNodeWhitelistSubnet:
    # https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_CreateDocument.html
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Name: !Ref DocumentName
      Tags:
        - Key: DocumentName
          Value: !Ref DocumentName
        - Key: DocumentVersion
          Value: "v0"
      Content:
        schemaVersion: "2.2"
        description: WhitelistSubnetWhitelistSubnet
        parameters:
          executionTimeout:
            type: String
            description: "timeout for run on all instances"
            default: "50000"
          scriptTimeout:
            type: String
            description: "timeout for script on individual instance"
            default: "3600"
          # e.g., "srEXiWaHuhNyGwPUi444Tu47ZEDwxTWrbQiuD7FmgSAQ6X7Dy"
          vmId:
            type: String
            description: Vm Id (must match with the binary path), used for making sure vm binary works!
          specPath:
            type: String
            description: avalancheup spec path (e.g., /data/avalancheup.yaml).
          xsvmName:
            type: String
            description: Name of xsvm in "Spec.xsvms".
          newWhitelistedSubnetId:
            type: String
            description: New subnet id to whitelist.
        mainSteps:
          - action: aws:runShellScript
            name: WhitelistSubnetWhitelistSubnet
            inputs:
              timeoutSeconds: "{{ scriptTimeout }}"
              runCommand:
                - |
                  #!/bin/bash
                  set -xeu

                  # to not use bash/sed hacks....
                  /usr/local/bin/avalanche-config --version
                  # to write subnet/chain config
                  /usr/local/bin/avalanched --version

                  # sudo systemctl cat avalanche
                  /usr/local/bin/plugins/{{ vmId }} --version

                  # to replace the avalanche configuration
                  # sudo cat /data/avalanche-configs/config.json
                  /usr/local/bin/avalanche-config add-whitelist-subnet \
                  --log-level info \
                  --skip-prompt \
                  --original-config-file-path=/data/avalanche-configs/config.json \
                  --new-config-file-path=/tmp/avalanche.config.json \
                  --subnet-id {{ newWhitelistedSubnetId }}

                  cat /tmp/avalanche.config.json
                  sudo cp /tmp/avalanche.config.json /data/avalanche-configs/config.json

                  # use "avalanched" to write subnet config based on spec and new subnet-id
                  /usr/local/bin/avalanched \
                  sync-xsvm-subnet-config \
                  --log-level info \
                  --spec-file-path {{ specPath }} \
                  --xsvm-name {{ xsvmName }} \
                  --subnet-id {{ newWhitelistedSubnetId }}

                  sudo systemctl restart avalanche
                  sleep 5
                  sudo tail -50 /var/log/avalanche/avalanche.log || true
                  # sudo tail -100 /var/log/avalanche/avalanche.log | grep {{ newWhitelistedSubnetId }}

                  # to check the status
                  # sudo find /var/log/avalanche/
                  # sudo tail /var/log/avalanche/avalanche.log
