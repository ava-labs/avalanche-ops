name: Build + test + release

on:
  push:
  pull_request:

permissions:
  contents: write

jobs:
  run_unit_tests:
    name: Unit tests with Rust stable
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: Run unit tests
        run: scripts/tests.unit.sh

  release:
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    needs: run_unit_tests
    strategy:
      matrix:
        job:
          - os: ubuntu-latest
            platform: linux
            target: x86_64-unknown-linux-gnu
            arch: amd64
          - os: macos-latest
            platform: darwin
            target: x86_64-apple-darwin
            arch: amd64

          # TODO: takes >13-min, too long for free-tier github action
          # NOT WORKING with openssl
          # "openssl-sys-0.9.72/build/find_normal.rs:180:5"
          # - os: macos-latest
          #   platform: darwin
          #   target: aarch64-apple-darwin
          #   arch: arm64

          # NOT WORKING WITH openssl
          # - os: windows-latest
          #   platform: win32
          #   target: x86_64-pc-windows-msvc
          #   arch: amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.job.target }}
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      # ref. https://github.com/gakonst/foundry/blob/708f48f8681fea3a42a34a0eed52090b3e37563e/.github/workflows/release.yml#L109
      - name: Apple M1 setup
        if: ${{ matrix.job.target == 'aarch64-apple-darwin' }}
        run: |
          echo "SDKROOT=$(xcrun -sdk macosx --show-sdk-path)" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx --show-sdk-platform-version)" >> $GITHUB_ENV

      - name: Compile binaries
        env:
          RUSTFLAGS: -C link-args=-s
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin avalanche-ops-nodes-aws --bin avalanched-aws --target ${{ matrix.job.target }}

      - name: Compress binaries
        id: release_artifacts
        env:
          PLATFORM_NAME: ${{ matrix.job.platform }}
          TARGET: ${{ matrix.job.target }}
          ARCH: ${{ matrix.job.arch }}
        shell: bash
        run: |
          if [ "$PLATFORM_NAME" == "linux" ]; then

            ./target/${TARGET}/release/avalanche-ops-nodes-aws --help
            cp ./target/${TARGET}/release/avalanche-ops-nodes-aws avalanche-ops-nodes-aws.${TARGET}
            echo "::set-output name=file_name_avalanche_ops::avalanche-ops-nodes-aws.${TARGET}"
            tar -czvf avalanche-ops-nodes-aws_${TARGET}.tar.gz -C ./target/${TARGET}/release avalanche-ops-nodes-aws
            echo "::set-output name=file_name_avalanche_ops_tar_gz::avalanche-ops-nodes-aws_${TARGET}.tar.gz"

            ./target/${TARGET}/release/avalanched-aws --help
            cp ./target/${TARGET}/release/avalanched-aws avalanched-aws.${TARGET}
            echo "::set-output name=file_name_avalanched::avalanched-aws.${TARGET}"
            tar -czvf avalanched-aws_${TARGET}.tar.gz -C ./target/${TARGET}/release avalanched-aws
            echo "::set-output name=file_name_avalanched_tar_gz::avalanched-aws_${TARGET}.tar.gz"

          elif [ "$PLATFORM_NAME" == "darwin" ]; then

            cp ./target/${TARGET}/release/avalanche-ops-nodes-aws avalanche-ops-nodes-aws.${TARGET}
            echo "::set-output name=file_name_avalanche_ops::avalanche-ops-nodes-aws.${TARGET}"
            gtar -czvf avalanche-ops-nodes-aws_${VERSION_NAME}_${TARGET}.tar.gz -C ./target/${TARGET}/release avalanche-ops-nodes-aws
            echo "::set-output name=file_name_avalanche_ops_tar_gz::avalanche-ops-nodes-aws_${TARGET}.tar.gz"

            cp ./target/${TARGET}/release/avalanched-aws avalanched-aws.${TARGET}
            echo "::set-output name=file_name_avalanched::avalanched-aws.${TARGET}"
            gtar -czvf avalanched-aws_${TARGET}.tar.gz -C ./target/${TARGET}/release avalanched-aws
            echo "::set-output name=file_name_avalanched_tar_gz::avalanched-aws_${TARGET}.tar.gz"

          else

            echo "skipping $PLATFORM_NAME"

          fi

      # https://github.com/softprops/action-gh-release
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: Tip
          tag_name: tip
          prerelease: true
          body: Latest builds from the last commit.
          files: |
            ${{ steps.release_artifacts.outputs.file_name_avalanche_ops }}
            ${{ steps.release_artifacts.outputs.file_name_avalanche_ops_tar_gz }}
            ${{ steps.release_artifacts.outputs.file_name_avalanched }}
            ${{ steps.release_artifacts.outputs.file_name_avalanched_tar_gz }}
